// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.busko.routemanager.web;

import org.busko.routemanager.model.transit.community.RouteOutline;
import org.busko.routemanager.model.transit.community.RouteSubmission;
import org.busko.routemanager.model.transit.gtfs.Agency;
import org.busko.routemanager.model.transit.gtfs.Route;
import org.busko.routemanager.model.transit.gtfs.Stop;
import org.busko.routemanager.model.transit.gtfs.StopTime;
import org.busko.routemanager.model.transit.gtfs.Trip;
import org.busko.routemanager.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<RouteOutline, String> ApplicationConversionServiceFactoryBean.getRouteOutlineToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.busko.routemanager.model.transit.community.RouteOutline, java.lang.String>() {
            public String convert(RouteOutline routeOutline) {
                return new StringBuilder().append(routeOutline.getUsername()).append(' ').append(routeOutline.getRouteName()).append(' ').append(routeOutline.getRouteDescription()).append(' ').append(routeOutline.getSubmittedDateTime()).toString();
            }
        };
    }
    
    public Converter<Long, RouteOutline> ApplicationConversionServiceFactoryBean.getIdToRouteOutlineConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.community.RouteOutline>() {
            public org.busko.routemanager.model.transit.community.RouteOutline convert(java.lang.Long id) {
                return RouteOutline.findRouteOutline(id);
            }
        };
    }
    
    public Converter<String, RouteOutline> ApplicationConversionServiceFactoryBean.getStringToRouteOutlineConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.community.RouteOutline>() {
            public org.busko.routemanager.model.transit.community.RouteOutline convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RouteOutline.class);
            }
        };
    }
    
    public Converter<RouteSubmission, String> ApplicationConversionServiceFactoryBean.getRouteSubmissionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.busko.routemanager.model.transit.community.RouteSubmission, java.lang.String>() {
            public String convert(RouteSubmission routeSubmission) {
                return new StringBuilder().append(routeSubmission.getUsername()).append(' ').append(routeSubmission.getSubmittedDateTime()).append(' ').append(routeSubmission.getFileData()).toString();
            }
        };
    }
    
    public Converter<Long, RouteSubmission> ApplicationConversionServiceFactoryBean.getIdToRouteSubmissionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.community.RouteSubmission>() {
            public org.busko.routemanager.model.transit.community.RouteSubmission convert(java.lang.Long id) {
                return RouteSubmission.findRouteSubmission(id);
            }
        };
    }
    
    public Converter<String, RouteSubmission> ApplicationConversionServiceFactoryBean.getStringToRouteSubmissionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.community.RouteSubmission>() {
            public org.busko.routemanager.model.transit.community.RouteSubmission convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RouteSubmission.class);
            }
        };
    }
    
    public Converter<Long, Agency> ApplicationConversionServiceFactoryBean.getIdToAgencyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.gtfs.Agency>() {
            public org.busko.routemanager.model.transit.gtfs.Agency convert(java.lang.Long id) {
                return Agency.findAgency(id);
            }
        };
    }
    
    public Converter<String, Agency> ApplicationConversionServiceFactoryBean.getStringToAgencyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.gtfs.Agency>() {
            public org.busko.routemanager.model.transit.gtfs.Agency convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Agency.class);
            }
        };
    }
    
    public Converter<Long, Route> ApplicationConversionServiceFactoryBean.getIdToRouteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.gtfs.Route>() {
            public org.busko.routemanager.model.transit.gtfs.Route convert(java.lang.Long id) {
                return Route.findRoute(id);
            }
        };
    }
    
    public Converter<String, Route> ApplicationConversionServiceFactoryBean.getStringToRouteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.gtfs.Route>() {
            public org.busko.routemanager.model.transit.gtfs.Route convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Route.class);
            }
        };
    }
    
    public Converter<Long, Stop> ApplicationConversionServiceFactoryBean.getIdToStopConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.gtfs.Stop>() {
            public org.busko.routemanager.model.transit.gtfs.Stop convert(java.lang.Long id) {
                return Stop.findStop(id);
            }
        };
    }
    
    public Converter<String, Stop> ApplicationConversionServiceFactoryBean.getStringToStopConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.gtfs.Stop>() {
            public org.busko.routemanager.model.transit.gtfs.Stop convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Stop.class);
            }
        };
    }
    
    public Converter<StopTime, String> ApplicationConversionServiceFactoryBean.getStopTimeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.busko.routemanager.model.transit.gtfs.StopTime, java.lang.String>() {
            public String convert(StopTime stopTime) {
                return new StringBuilder().append(stopTime.getArrivalTime()).append(' ').append(stopTime.getDepartureTime()).append(' ').append(stopTime.getStopSequence()).toString();
            }
        };
    }
    
    public Converter<Long, StopTime> ApplicationConversionServiceFactoryBean.getIdToStopTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.gtfs.StopTime>() {
            public org.busko.routemanager.model.transit.gtfs.StopTime convert(java.lang.Long id) {
                return StopTime.findStopTime(id);
            }
        };
    }
    
    public Converter<String, StopTime> ApplicationConversionServiceFactoryBean.getStringToStopTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.gtfs.StopTime>() {
            public org.busko.routemanager.model.transit.gtfs.StopTime convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StopTime.class);
            }
        };
    }
    
    public Converter<Long, Trip> ApplicationConversionServiceFactoryBean.getIdToTripConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, org.busko.routemanager.model.transit.gtfs.Trip>() {
            public org.busko.routemanager.model.transit.gtfs.Trip convert(java.lang.Long id) {
                return Trip.findTrip(id);
            }
        };
    }
    
    public Converter<String, Trip> ApplicationConversionServiceFactoryBean.getStringToTripConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.busko.routemanager.model.transit.gtfs.Trip>() {
            public org.busko.routemanager.model.transit.gtfs.Trip convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Trip.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getRouteOutlineToStringConverter());
        registry.addConverter(getIdToRouteOutlineConverter());
        registry.addConverter(getStringToRouteOutlineConverter());
        registry.addConverter(getRouteSubmissionToStringConverter());
        registry.addConverter(getIdToRouteSubmissionConverter());
        registry.addConverter(getStringToRouteSubmissionConverter());
        registry.addConverter(getAgencyToStringConverter());
        registry.addConverter(getIdToAgencyConverter());
        registry.addConverter(getStringToAgencyConverter());
        registry.addConverter(getRouteToStringConverter());
        registry.addConverter(getIdToRouteConverter());
        registry.addConverter(getStringToRouteConverter());
        registry.addConverter(getStopToStringConverter());
        registry.addConverter(getIdToStopConverter());
        registry.addConverter(getStringToStopConverter());
        registry.addConverter(getStopTimeToStringConverter());
        registry.addConverter(getIdToStopTimeConverter());
        registry.addConverter(getStringToStopTimeConverter());
        registry.addConverter(getTripToStringConverter());
        registry.addConverter(getIdToTripConverter());
        registry.addConverter(getStringToTripConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
